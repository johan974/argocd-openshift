apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # Use a privileged security context
      securityContext:
        fsGroup: 1000  # core group
      initContainers:
        - name: init-permissions
          image: busybox
          command: ['sh', '-c', 'mkdir -p /var/lib/postgresql/data/pgdata && chmod 700 /var/lib/postgresql/data/pgdata && chown -R 1000:1000 /var/lib/postgresql/data']
          securityContext:
            runAsUser: 0  # Run as root for init container
            privileged: true  # Use privileged mode to set permissions
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:13
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgresdb
            - name: POSTGRES_USER
              value: postgresuser
            - name: POSTGRES_PASSWORD
              value: postgrespassword
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          securityContext:
            runAsUser: 1000  # Use the core user
            runAsGroup: 1000  # Use the core group
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc